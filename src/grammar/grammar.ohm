Housify {
    Module = ModuleItem*

    ModuleItem = House
    
    House = house id "{" HouseItemTop* HouseItem* "}"

    HouseItemTop = GlobalStat | PlayerStat
    HouseItem = Handler

    GlobalStat = global id ":" Type ("=" Expression)? ";"
    PlayerStat = player id ":" Type ("=" Expression)? ";"

    Handler = handle "(" Parameter ")" "{" Statement* "}"

    Parameter = id ":" Type

    Statement = StatementAssign
              | StatementLet
              | StatementExpression
              | StatementIf
    
    StatementAssign = Expression "=" Expression ";"

    StatementLet = let id ":" Type "=" Expression ";"

    StatementExpression = Expression ";"

    StatementIf = if Expression "{" Statement* "}" ~else --noElse
                | if Expression "{" Statement* "}" else "{" Statement* "}" --withElse
                | if Expression "{" Statement* "}" else StatementIf --withElseIf
    
    Expression = ExpressionField
               | ExpressionBinary
               | ExpressionUnary
               | ExpressionLiteral
               | ExpressionId
               | ExpressionParens
    
    ExpressionBinary = Expression binaryOp Expression
    ExpressionUnary = unaryOp Expression
    ExpressionLiteral = integerLiteral | booleanLiteral
    ExpressionId = id
    ExpressionField = Expression "." id
    ExpressionParens = "(" Expression ")"

    binaryOp = "+" | "-" | "*" | "/" | "==" | "!=" | "<" | "<=" | ">" | ">=" | "&&" | "||"
    unaryOp = "+" | "-" | "!"

    Type = id --regular

    integerLiteral = digit+

    booleanLiteral = true | false

    letterAsciiLC = "a".."z"
    letterAsciiUC = "A".."Z"
    letterAscii = letterAsciiLC | letterAsciiUC
    letterComment = letterAsciiLC | letterAsciiUC | digit | "_"

    id = idRegular | idExceptions

    idStart = letterAscii | "_"
    idPart = letterAscii | digit | "_"
    idRegular = ~keyword #idStart #(idPart*)
    idExceptions = global | player

    house = "house" ~idPart
    global = "global" ~idPart
    player = "player" ~idPart
    handle = "handle" ~idPart
    let = "let" ~idPart
    if = "if" ~idPart
    else = "else" ~idPart
    true = "true" ~idPart
    false = "false" ~idPart

    keyword = house | global | player | handle | let | if | else
}