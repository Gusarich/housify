// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Grammar should fail 1 1`] = `
"Line 5, col 15:
  4 |     player xp: int = 123;
> 5 |     player yp int;
                    ^
  6 | 
Expected ":""
`;

exports[`Grammar should fail 2 1`] = `
"Line 3, col 13:
  2 |     handle BlockBreak {
> 3 |         x = ;
                  ^
  4 |     }
Expected "(", "player", "global", "_", "A".."Z", "a".."z", a digit, "!", "-", or "+""
`;

exports[`Grammar should fail 3 1`] = `
"Line 3, col 22:
  2 |     handle BlockBreak {
> 3 |         let x: int = ;
                           ^
  4 |     }
Expected "(", "player", "global", "_", "A".."Z", "a".."z", a digit, "!", "-", or "+""
`;

exports[`Grammar should fail 4 1`] = `
"Line 4, col 5:
  3 |         5
> 4 |     }
          ^
  5 | }
Expected ";", "=", "||", "&&", ">=", ">", "<=", "<", "!=", "==", "/", "*", "-", "+", or ".""
`;

exports[`Grammar should fail 5 1`] = `
"Line 6, col 5:
  5 |         } else
> 6 |     }
          ^
  7 | }
Expected "if" or "{""
`;

exports[`Grammar should fail 6 1`] = `
"Line 3, col 17:
  2 |     handle BlockBreak {
> 3 |         x = 5 + ;
                      ^
  4 |     }
Expected "(", "player", "global", "_", "A".."Z", "a".."z", a digit, "!", "-", or "+""
`;

exports[`Grammar should fail 7 1`] = `
"Line 3, col 14:
  2 |     handle BlockBreak {
> 3 |         x = -;
                   ^
  4 |     }
Expected "(", "player", "global", "_", "A".."Z", "a".."z", a digit, "!", "-", or "+""
`;

exports[`Grammar should fail 8 1`] = `
"Line 3, col 15:
  2 |     handle BlockBreak {
> 3 |         x = 42a;
                    ^
  4 |     }
Expected ";""
`;

exports[`Grammar should fail 9 1`] = `
"Line 4, col 5:
  3 |         myVar
> 4 |     }
          ^
  5 | }
Expected ";", "=", "||", "&&", ">=", ">", "<=", "<", "!=", "==", "/", "*", "-", "+", or ".""
`;

exports[`Grammar should fail 10 1`] = `
"Line 3, col 19:
  2 |     handle BlockBreak {
> 3 |         (x + y) * ;
                        ^
  4 |     }
Expected "(", "player", "global", "_", "A".."Z", "a".."z", a digit, "!", "-", or "+""
`;

exports[`Grammar should fail 11 1`] = `
"Line 10, col 5:
   9 | 
> 10 |     player yp: int;
           ^
  11 | }
Expected "}" or "handle""
`;

exports[`Grammar should parse 1 1`] = `
{
  "id": 19,
  "items": [
    {
      "id": 18,
      "items": [
        {
          "defaultValue": {
            "id": 4,
            "kind": "integerLiteral",
            "value": "10",
          },
          "id": 5,
          "kind": "globalStat",
          "name": {
            "id": 2,
            "kind": "id",
            "name": "xg",
          },
          "type": {
            "id": 3,
            "kind": "id",
            "name": "int",
          },
        },
        {
          "defaultValue": undefined,
          "id": 8,
          "kind": "globalStat",
          "name": {
            "id": 6,
            "kind": "id",
            "name": "yg",
          },
          "type": {
            "id": 7,
            "kind": "id",
            "name": "int",
          },
        },
        {
          "defaultValue": {
            "id": 11,
            "kind": "integerLiteral",
            "value": "123",
          },
          "id": 12,
          "kind": "playerStat",
          "name": {
            "id": 9,
            "kind": "id",
            "name": "xp",
          },
          "type": {
            "id": 10,
            "kind": "id",
            "name": "int",
          },
        },
        {
          "defaultValue": undefined,
          "id": 15,
          "kind": "playerStat",
          "name": {
            "id": 13,
            "kind": "id",
            "name": "yp",
          },
          "type": {
            "id": 14,
            "kind": "id",
            "name": "int",
          },
        },
        {
          "event": {
            "id": 16,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 17,
          "kind": "handler",
          "statements": [],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 2 1`] = `
{
  "id": 9,
  "items": [
    {
      "id": 8,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 7,
          "kind": "handler",
          "statements": [
            {
              "id": 6,
              "kind": "statementAssign",
              "lvalue": {
                "id": 4,
                "kind": "expressionId",
                "name": {
                  "id": 3,
                  "kind": "id",
                  "name": "x",
                },
              },
              "value": {
                "id": 5,
                "kind": "integerLiteral",
                "value": "5",
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 3 1`] = `
{
  "id": 9,
  "items": [
    {
      "id": 8,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 7,
          "kind": "handler",
          "statements": [
            {
              "id": 6,
              "kind": "statementLet",
              "name": {
                "id": 3,
                "kind": "id",
                "name": "x",
              },
              "type": {
                "id": 4,
                "kind": "id",
                "name": "int",
              },
              "value": {
                "id": 5,
                "kind": "integerLiteral",
                "value": "5",
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 4 1`] = `
{
  "id": 7,
  "items": [
    {
      "id": 6,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 5,
          "kind": "handler",
          "statements": [
            {
              "expression": {
                "id": 3,
                "kind": "integerLiteral",
                "value": "5",
              },
              "id": 4,
              "kind": "statementExpression",
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 5 1`] = `
{
  "id": 14,
  "items": [
    {
      "id": 13,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 12,
          "kind": "handler",
          "statements": [
            {
              "condition": {
                "id": 6,
                "kind": "expressionBinary",
                "left": {
                  "id": 4,
                  "kind": "expressionId",
                  "name": {
                    "id": 3,
                    "kind": "id",
                    "name": "x",
                  },
                },
                "op": "==",
                "right": {
                  "id": 5,
                  "kind": "integerLiteral",
                  "value": "5",
                },
              },
              "id": 11,
              "kind": "statementIf",
              "then": [
                {
                  "id": 10,
                  "kind": "statementAssign",
                  "lvalue": {
                    "id": 8,
                    "kind": "expressionId",
                    "name": {
                      "id": 7,
                      "kind": "id",
                      "name": "y",
                    },
                  },
                  "value": {
                    "id": 9,
                    "kind": "integerLiteral",
                    "value": "10",
                  },
                },
              ],
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 6 1`] = `
{
  "id": 11,
  "items": [
    {
      "id": 10,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 9,
          "kind": "handler",
          "statements": [
            {
              "id": 8,
              "kind": "statementAssign",
              "lvalue": {
                "id": 4,
                "kind": "expressionId",
                "name": {
                  "id": 3,
                  "kind": "id",
                  "name": "x",
                },
              },
              "value": {
                "id": 7,
                "kind": "expressionBinary",
                "left": {
                  "id": 5,
                  "kind": "integerLiteral",
                  "value": "5",
                },
                "op": "+",
                "right": {
                  "id": 6,
                  "kind": "integerLiteral",
                  "value": "3",
                },
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 7 1`] = `
{
  "id": 10,
  "items": [
    {
      "id": 9,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 8,
          "kind": "handler",
          "statements": [
            {
              "id": 7,
              "kind": "statementAssign",
              "lvalue": {
                "id": 4,
                "kind": "expressionId",
                "name": {
                  "id": 3,
                  "kind": "id",
                  "name": "x",
                },
              },
              "value": {
                "id": 6,
                "kind": "expressionUnary",
                "op": "-",
                "operand": {
                  "id": 5,
                  "kind": "integerLiteral",
                  "value": "5",
                },
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 8 1`] = `
{
  "id": 9,
  "items": [
    {
      "id": 8,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 7,
          "kind": "handler",
          "statements": [
            {
              "id": 6,
              "kind": "statementAssign",
              "lvalue": {
                "id": 4,
                "kind": "expressionId",
                "name": {
                  "id": 3,
                  "kind": "id",
                  "name": "x",
                },
              },
              "value": {
                "id": 5,
                "kind": "integerLiteral",
                "value": "42",
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 9 1`] = `
{
  "id": 8,
  "items": [
    {
      "id": 7,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 6,
          "kind": "handler",
          "statements": [
            {
              "expression": {
                "id": 4,
                "kind": "expressionId",
                "name": {
                  "id": 3,
                  "kind": "id",
                  "name": "myVar",
                },
              },
              "id": 5,
              "kind": "statementExpression",
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 10 1`] = `
{
  "id": 14,
  "items": [
    {
      "id": 13,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 12,
          "kind": "handler",
          "statements": [
            {
              "expression": {
                "id": 10,
                "kind": "expressionBinary",
                "left": {
                  "id": 7,
                  "kind": "expressionBinary",
                  "left": {
                    "id": 4,
                    "kind": "expressionId",
                    "name": {
                      "id": 3,
                      "kind": "id",
                      "name": "x",
                    },
                  },
                  "op": "+",
                  "right": {
                    "id": 6,
                    "kind": "expressionId",
                    "name": {
                      "id": 5,
                      "kind": "id",
                      "name": "y",
                    },
                  },
                },
                "op": "*",
                "right": {
                  "id": 9,
                  "kind": "expressionId",
                  "name": {
                    "id": 8,
                    "kind": "id",
                    "name": "z",
                  },
                },
              },
              "id": 11,
              "kind": "statementExpression",
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 11 1`] = `
{
  "id": 29,
  "items": [
    {
      "id": 28,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 27,
          "kind": "handler",
          "statements": [
            {
              "id": 8,
              "kind": "statementAssign",
              "lvalue": {
                "field": {
                  "id": 5,
                  "kind": "id",
                  "name": "x",
                },
                "id": 6,
                "kind": "expressionField",
                "struct": {
                  "id": 4,
                  "kind": "expressionId",
                  "name": {
                    "id": 3,
                    "kind": "id",
                    "name": "self",
                  },
                },
              },
              "value": {
                "id": 7,
                "kind": "integerLiteral",
                "value": "10",
              },
            },
            {
              "id": 16,
              "kind": "statementAssign",
              "lvalue": {
                "field": {
                  "id": 13,
                  "kind": "id",
                  "name": "y",
                },
                "id": 14,
                "kind": "expressionField",
                "struct": {
                  "field": {
                    "id": 11,
                    "kind": "id",
                    "name": "x",
                  },
                  "id": 12,
                  "kind": "expressionField",
                  "struct": {
                    "id": 10,
                    "kind": "expressionId",
                    "name": {
                      "id": 9,
                      "kind": "id",
                      "name": "self",
                    },
                  },
                },
              },
              "value": {
                "id": 15,
                "kind": "integerLiteral",
                "value": "10",
              },
            },
            {
              "id": 26,
              "kind": "statementAssign",
              "lvalue": {
                "field": {
                  "id": 23,
                  "kind": "id",
                  "name": "z",
                },
                "id": 24,
                "kind": "expressionField",
                "struct": {
                  "field": {
                    "id": 21,
                    "kind": "id",
                    "name": "y",
                  },
                  "id": 22,
                  "kind": "expressionField",
                  "struct": {
                    "field": {
                      "id": 19,
                      "kind": "id",
                      "name": "x",
                    },
                    "id": 20,
                    "kind": "expressionField",
                    "struct": {
                      "id": 18,
                      "kind": "expressionId",
                      "name": {
                        "id": 17,
                        "kind": "id",
                        "name": "self",
                      },
                    },
                  },
                },
              },
              "value": {
                "id": 25,
                "kind": "integerLiteral",
                "value": "10",
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;

exports[`Grammar should parse 12 1`] = `
{
  "id": 11,
  "items": [
    {
      "id": 10,
      "items": [
        {
          "event": {
            "id": 2,
            "kind": "id",
            "name": "BlockBreak",
          },
          "id": 9,
          "kind": "handler",
          "statements": [
            {
              "id": 8,
              "kind": "statementAssign",
              "lvalue": {
                "field": {
                  "id": 5,
                  "kind": "id",
                  "name": "x",
                },
                "id": 6,
                "kind": "expressionField",
                "struct": {
                  "id": 4,
                  "kind": "expressionId",
                  "name": {
                    "id": 3,
                    "kind": "id",
                    "name": "global",
                  },
                },
              },
              "value": {
                "id": 7,
                "kind": "integerLiteral",
                "value": "123",
              },
            },
          ],
        },
      ],
      "kind": "house",
      "name": {
        "id": 1,
        "kind": "id",
        "name": "MyHouse",
      },
    },
  ],
  "kind": "module",
}
`;
